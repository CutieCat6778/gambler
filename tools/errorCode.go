package tools

const (
	DB_UNKNOWN_ERR = iota // DB ERROR
	DB_REC_NOTFOUND
	DB_DUP_KEY
	JWT_FAILED_TO_SIGN // JWT ERROR
	JWT_FAILED_TO_DECODE
	JWT_INVALID
	JWT_EXPIRED
	WS_UUID_DUP // WS ERROR
	WS_UUID_NOTFOUND
	WS_GAMEID_NOTFOUND
	WS_INVALID_CONN
	WS_UNKNOWN_ERR
	WS_COMMAND_NOTFOUND
	RD_CONN_CLOSED // REDIS ERROR
	RD_KEY_NOT_FOUND
	RD_TX_FAILED
	RD_UNKNOWN
	BET_NOT_ACTIVE       // BET ERROR
	JSON_UNMARSHAL_ERROR // JSON ERROR
)

var errorNames = map[int]string{
	DB_UNKNOWN_ERR:       "DB_UNKNOWN_ERR",
	DB_REC_NOTFOUND:      "DB_REC_NOTFOUND",
	DB_DUP_KEY:           "DB_DUP_KEY",
	JWT_FAILED_TO_SIGN:   "JWT_FAILED_TO_SIGN",
	JWT_FAILED_TO_DECODE: "JWT_FAILED_TO_DECODE",
	JWT_INVALID:          "JWT_INVALID",
	JWT_EXPIRED:          "JWT_EXPIRED",
	WS_UUID_DUP:          "WS_UUID_DUP",
	WS_UUID_NOTFOUND:     "WS_UUID_NOTFOUND",
	WS_GAMEID_NOTFOUND:   "WS_GAMEID_NOTFOUND",
	WS_INVALID_CONN:      "WS_INVALID_CONN",
	WS_UNKNOWN_ERR:       "WS_UNKNOWN_ERR",
	WS_COMMAND_NOTFOUND:  "WS_COMMAND_NOTFOUND",
	RD_CONN_CLOSED:       "RD_CONN_CLOSED",
	RD_KEY_NOT_FOUND:     "RD_KEY_NOT_FOUND",
	RD_TX_FAILED:         "RD_TX_FAILED",
	RD_UNKNOWN:           "RD_UNKNOWN",
	BET_NOT_ACTIVE:       "BET_NOT_ACTIVE",
	JSON_UNMARSHAL_ERROR: "JSON_UNMARSHAL_ERROR",
}

func GetErrorString(err int) string {
	if name, ok := errorNames[err]; ok {
		return name
	}
	return "UNKNOWN_ERROR"
}
